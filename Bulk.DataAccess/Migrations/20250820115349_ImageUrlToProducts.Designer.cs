// <auto-generated />
using Bulk.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bulk.DataAccess.Migrations
{
    [DbContext(typeof(BulkDbContext))]
    [Migration("20250820115349_ImageUrlToProducts")]
    partial class ImageUrlToProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bulk.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Programming & Technology"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Business & Self-Improvement"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Classic Literature"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Science Fiction & Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Non-Fiction & History"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "Mystery & Thriller"
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 8,
                            Name = "Young Adult"
                        });
                });

            modelBuilder.Entity("Bulk.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ListPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Price100")
                        .HasColumnType("double precision");

                    b.Property<double>("Price50")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Robert C. Martin",
                            CategoryId = 1,
                            Description = "A comprehensive guide to writing clean, readable, and maintainable code. Essential reading for software developers who want to improve their craft.",
                            ISBN = "978-0132350884",
                            ImageUrl = "",
                            ListPrice = 45.990000000000002,
                            Price = 42.990000000000002,
                            Price100 = 38.990000000000002,
                            Price50 = 40.990000000000002,
                            Title = "Clean Code: A Handbook of Agile Software Craftsmanship"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            CategoryId = 1,
                            Description = "The classic book on design patterns that every software developer should read. Learn the 23 Gang of Four patterns.",
                            ISBN = "978-0201633610",
                            ImageUrl = "",
                            ListPrice = 54.990000000000002,
                            Price = 51.990000000000002,
                            Price100 = 47.990000000000002,
                            Price50 = 49.990000000000002,
                            Title = "Design Patterns: Elements of Reusable Object-Oriented Software"
                        },
                        new
                        {
                            Id = 3,
                            Author = "David Thomas, Andrew Hunt",
                            CategoryId = 1,
                            Description = "From journeyman to master - this book will help you become a better programmer through practical advice and techniques.",
                            ISBN = "978-0135957059",
                            ImageUrl = "",
                            ListPrice = 49.990000000000002,
                            Price = 46.990000000000002,
                            Price100 = 42.990000000000002,
                            Price50 = 44.990000000000002,
                            Title = "The Pragmatic Programmer: Your Journey to Mastery"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Eric Ries",
                            CategoryId = 2,
                            Description = "How today's entrepreneurs use continuous innovation to create radically successful businesses.",
                            ISBN = "978-0307887894",
                            ImageUrl = "",
                            ListPrice = 28.989999999999998,
                            Price = 26.989999999999998,
                            Price100 = 22.989999999999998,
                            Price50 = 24.989999999999998,
                            Title = "The Lean Startup"
                        },
                        new
                        {
                            Id = 5,
                            Author = "James Clear",
                            CategoryId = 2,
                            Description = "Transform your life with tiny changes in behavior. Learn how small habits can make a big difference.",
                            ISBN = "978-0735211292",
                            ImageUrl = "",
                            ListPrice = 27.989999999999998,
                            Price = 25.989999999999998,
                            Price100 = 21.989999999999998,
                            Price50 = 23.989999999999998,
                            Title = "Atomic Habits: An Easy & Proven Way to Build Good Habits & Break Bad Ones"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Harper Lee",
                            CategoryId = 3,
                            Description = "Harper Lee's timeless classic about courage, morality, and growing up in the American South.",
                            ISBN = "978-0060935467",
                            ImageUrl = "",
                            ListPrice = 15.99,
                            Price = 14.99,
                            Price100 = 12.99,
                            Price50 = 13.99,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 7,
                            Author = "George Orwell",
                            CategoryId = 3,
                            Description = "George Orwell's dystopian masterpiece about totalitarianism and the power of language.",
                            ISBN = "978-0451524935",
                            ImageUrl = "",
                            ListPrice = 13.99,
                            Price = 12.99,
                            Price100 = 10.99,
                            Price50 = 11.99,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Jane Austen",
                            CategoryId = 6,
                            Description = "Jane Austen's beloved romance about Elizabeth Bennet and Mr. Darcy in Regency England.",
                            ISBN = "978-0141439518",
                            ImageUrl = "",
                            ListPrice = 12.99,
                            Price = 11.99,
                            Price100 = 9.9900000000000002,
                            Price50 = 10.99,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Frank Herbert",
                            CategoryId = 4,
                            Description = "Frank Herbert's epic science fiction novel set on the desert planet Arrakis. A masterpiece of world-building.",
                            ISBN = "978-0441172719",
                            ImageUrl = "",
                            ListPrice = 18.989999999999998,
                            Price = 17.989999999999998,
                            Price100 = 15.99,
                            Price50 = 16.989999999999998,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 10,
                            Author = "J.R.R. Tolkien",
                            CategoryId = 4,
                            Description = "The first volume of J.R.R. Tolkien's epic fantasy trilogy that defined the genre.",
                            ISBN = "978-0547928210",
                            ImageUrl = "",
                            ListPrice = 16.989999999999998,
                            Price = 15.99,
                            Price100 = 13.99,
                            Price50 = 14.99,
                            Title = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Yuval Noah Harari",
                            CategoryId = 5,
                            Description = "Yuval Noah Harari explores the journey of our species from the Stone Age to the Silicon Age.",
                            ISBN = "978-0062316097",
                            ImageUrl = "",
                            ListPrice = 24.989999999999998,
                            Price = 22.989999999999998,
                            Price100 = 18.989999999999998,
                            Price50 = 20.989999999999998,
                            Title = "Sapiens: A Brief History of Humankind"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Tara Westover",
                            CategoryId = 5,
                            Description = "Tara Westover's powerful memoir about education, family, and the struggle between loyalty and independence.",
                            ISBN = "978-0399590504",
                            ImageUrl = "",
                            ListPrice = 26.989999999999998,
                            Price = 24.989999999999998,
                            Price100 = 20.989999999999998,
                            Price50 = 22.989999999999998,
                            Title = "Educated: A Memoir"
                        });
                });

            modelBuilder.Entity("Bulk.Models.Product", b =>
                {
                    b.HasOne("Bulk.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
